package designpattern;

/**
 * @author wangjin
 * 时间 2019年4月11日09:37:02
 * 设计模式
 * */
public class DesignPatternInfo {
    /**
     * 六大原则
     * 1.开闭原则:对修改关闭，扩展开放。需要使用接口和抽象类<br>
     *     ps:不动写好的代码，可以增加新的代码
     * 2.里氏代换原则:任何基类能存在的地方，子类一定能替换。<br>
     *      里氏代换原则是对开闭原则的补充，因为开闭原则为抽象类或接口<br>
     *      而子类会实现抽象类或接口<br>
     * 3.依赖倒转原则:针对接口编程，依赖于抽象而不是实现<br>
     * 4.接口隔离原则:使用多个隔离的接口，而不是单一接口<br>
     *     一个类对另一个类的依赖应该是最小接口<br>\
     * 5.迪米特法则:尽可能少的与其他类相互影响
     * 6.合成复用:多使用组合而不是继承
     * */
    public static void main(String[] args){

    }

}
